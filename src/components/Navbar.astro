---
import HamburNavBar from './HamburNavBar.astro'
import Config from '../store/config'
import DarkmodeToggle from './DarkmodeToggle.astro'

const config = Config.getConfig()
const links = config.menus
const logo = config.logo
const sitename = config.sitename
---
<nav class=" w-full fixed z-10">
    <HamburNavBar />
    <div class="justify-center items-center sm:flex hidden rounded-b-md h-16 px-20 bg-[--nav-background-color] text-[--font-color] shadow-md">
        <div id="logo" class="flex items-center cursor-pointer absolute left-20">
            <img class="w-10 h-10 mr-2" src={logo} alt="logo">
            <span class=" text-xl transition-colors">{sitename}</span>
        </div>
        <div>
            {
                links.map((link:any) => (
                    <a class=" px-2 hover:text-[--primary] transition-colors" href={link.url}>{link.name} </a>
                ))
            }
        </div>
        <div class="flex items-center absolute right-20">
            <button class="w-8 h-8 flex justify-center items-center" id="nav-search-btn" aria-label="搜索" type="button">
                <i class={"iconfont icon-sousuo2 text-32 text-deepgray-light dark:text-deepgray-night"}></i>
            </button>
            <div class=" w-8 h-8 flex justify-center items-center ml-4 pb-2" id="nav-theme">
                <DarkmodeToggle />
            </div>
        </div>
    </div>
</nav>

<script>
    function bindHomeButton(){
        const logo = document.getElementById('logo') as HTMLElement;
        logo.addEventListener('click', () => {
            window.location.href = '/'
        })
    }
    function bindThemeToggle() {
        const isDark = localStorage.getItem('theme') === 'dark';

        const htmlElement = document.documentElement;
        const switchBtn = document.getElementById('nav-theme')?.querySelector('div[data-name]') as HTMLElement;

        if(isDark){
            htmlElement.classList.remove('light');
            htmlElement.classList.add('dark');
        }else{
            htmlElement.classList.remove('dark');
            htmlElement.classList.add('light');
        }

        // 根据状态设置按钮初始状态
        const switchBtnCheckbox = switchBtn.firstElementChild as HTMLInputElement;
        switchBtnCheckbox.checked = isDark;
        switchBtn.addEventListener('change', () => {
            if (htmlElement.classList.contains('dark')) {
                htmlElement.classList.remove('dark');
                htmlElement.classList.add('light');
                localStorage.setItem('theme', 'light');
            } else {
                htmlElement.classList.remove('light');
                htmlElement.classList.add('dark');
                localStorage.setItem('theme', 'dark');
            }
        });
    }
    function bindSearchModal() {
      const btn = document.getElementById('nav-search-btn') as HTMLElement;
      const modal = document.getElementById('search-modal-root') as HTMLElement;
      
      btn.addEventListener('click', () => {
        modal.style.display = '';
        setTimeout(() => {
          const input = document.getElementById('search-input');
          if(input) input.focus();
        }, 100);
      });
    }
    document.addEventListener('astro:page-load', () => {
        bindThemeToggle()
        bindHomeButton()
        bindSearchModal()
    });
</script>
